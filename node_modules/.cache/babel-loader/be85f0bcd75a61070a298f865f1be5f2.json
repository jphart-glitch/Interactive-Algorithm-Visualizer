{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jackh\\\\Documents\\\\Interactive-Algorithm-Visualizer\\\\react_project\\\\algoactive\\\\src\\\\components\\\\ArraySquare.jsx\",\n  _s = $RefreshSig$();\n/* ------------------------------------------------------------------ */\n/* ArraySquare.jsx                                                    */\n/* Author: John Hart                                                  */\n/* ------------------------------------------------------------------ */\n\nimport React from 'react';\nimport Square from \"./Square\";\nimport { swapSquares } from \"./Simulation\";\nimport { ItemTypes } from \"./Constants\";\nimport { useDrop } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ArraySquare(_ref) {\n  _s();\n  let {\n    index,\n    children\n  } = _ref;\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: ItemTypes.ELEMENT,\n    drop: monitor => {\n      console.log('moving item: ', monitor.itemID);\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  }));\n  const color = index % 2 === 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Square, {\n      color: color,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), isOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height: '100%',\n        width: '100%',\n        zIndex: 1,\n        opacity: 0.5,\n        backgroundColor: 'yellow'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(ArraySquare, \"J1zlkivqRCGcJFAnPMhlnYWlWR0=\", false, function () {\n  return [useDrop];\n});\n_c = ArraySquare;\nvar _c;\n$RefreshReg$(_c, \"ArraySquare\");","map":{"version":3,"names":["React","Square","swapSquares","ItemTypes","useDrop","ArraySquare","index","children","isOver","drop","accept","ELEMENT","monitor","console","log","itemID","collect","color","position","width","height","top","left","zIndex","opacity","backgroundColor"],"sources":["C:/Users/jackh/Documents/Interactive-Algorithm-Visualizer/react_project/algoactive/src/components/ArraySquare.jsx"],"sourcesContent":["/* ------------------------------------------------------------------ */\r\n/* ArraySquare.jsx                                                    */\r\n/* Author: John Hart                                                  */\r\n/* ------------------------------------------------------------------ */\r\n\r\nimport React from 'react';\r\nimport Square from \"./Square\";\r\nimport {swapSquares} from \"./Simulation\";\r\nimport {ItemTypes} from \"./Constants\";\r\nimport {useDrop} from 'react-dnd';\r\n\r\nexport default function ArraySquare({index, children}) {\r\n    const [{isOver}, drop] = useDrop(() => ({\r\n        accept: ItemTypes.ELEMENT,\r\n        drop: monitor => {\r\n            console.log('moving item: ', monitor.itemID)\r\n        },\r\n        collect: monitor => ({\r\n            isOver: !!monitor.isOver()\r\n        })\r\n    }));\r\n\r\n    const color = index % 2 === 1;\r\n    return (\r\n        <div\r\n            ref={drop}\r\n            style={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: '100%'\r\n            }}\r\n        >\r\n            <Square color={color}>{children}</Square>\r\n            {isOver && (\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        height: '100%',\r\n                        width: '100%',\r\n                        zIndex : 1,\r\n                        opacity: 0.5,\r\n                        backgroundColor: 'yellow'\r\n                    }}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAAQC,WAAW,QAAO,cAAc;AACxC,SAAQC,SAAS,QAAO,aAAa;AACrC,SAAQC,OAAO,QAAO,WAAW;AAAC;AAElC,eAAe,SAASC,WAAW,OAAoB;EAAA;EAAA,IAAnB;IAACC,KAAK;IAAEC;EAAQ,CAAC;EACjD,MAAM,CAAC;IAACC;EAAM,CAAC,EAAEC,IAAI,CAAC,GAAGL,OAAO,CAAC,OAAO;IACpCM,MAAM,EAAEP,SAAS,CAACQ,OAAO;IACzBF,IAAI,EAAEG,OAAO,IAAI;MACbC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,OAAO,CAACG,MAAM,CAAC;IAChD,CAAC;IACDC,OAAO,EAAEJ,OAAO,KAAK;MACjBJ,MAAM,EAAE,CAAC,CAACI,OAAO,CAACJ,MAAM;IAC5B,CAAC;EACL,CAAC,CAAC,CAAC;EAEH,MAAMS,KAAK,GAAGX,KAAK,GAAG,CAAC,KAAK,CAAC;EAC7B,oBACI;IACI,GAAG,EAAEG,IAAK;IACV,KAAK,EAAE;MACHS,QAAQ,EAAE,UAAU;MACpBC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE;IACZ,CAAE;IAAA,wBAEF,QAAC,MAAM;MAAC,KAAK,EAAEH,KAAM;MAAA,UAAEV;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAU,EACxCC,MAAM,iBACH;MACI,KAAK,EAAE;QACHU,QAAQ,EAAE,UAAU;QACpBG,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPF,MAAM,EAAE,MAAM;QACdD,KAAK,EAAE,MAAM;QACbI,MAAM,EAAG,CAAC;QACVC,OAAO,EAAE,GAAG;QACZC,eAAe,EAAE;MACrB;IAAE;MAAA;MAAA;MAAA;IAAA,QAET;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEd;AAAC,GAtCuBpB,WAAW;EAAA,QACND,OAAO;AAAA;AAAA,KADZC,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}