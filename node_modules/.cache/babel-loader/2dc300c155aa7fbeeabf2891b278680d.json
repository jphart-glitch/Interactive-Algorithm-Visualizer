{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jackh\\\\Documents\\\\Interactive-Algorithm-Visualizer\\\\react_project\\\\algoactive\\\\src\\\\components\\\\Chessboard.jsx\";\n/* ------------------------------------------------------------------ */\n/* Chessboard.jsx                                                     */\n/* Author: John Hart                                                  */\n/* ------------------------------------------------------------------ */\n\nimport React from \"react\";\n// importing Link from react-router-dom to navigate to \n// different end points.\nimport { Link } from \"react-router-dom\";\nimport Board from \"./Board\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst renderSquare = new function (x, y, _ref) {\n  let [knightX, knightY] = _ref;\n  const black = (x + y) % 2 === 1;\n  const isKnightHere = knightX === x && knightY === y;\n  const piece = isKnightHere ? /*#__PURE__*/_jsxDEV(ChessboardKnight, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 36\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(ChessboardSquare, {\n    black: black,\n    children: piece\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 14\n  }, this);\n}();\nconst Chessboard = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: [renderSquare(0, 0, knightPosition), renderSquare(1, 0, knightPosition), renderSquare(2, 0, knightPosition)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n_c = Chessboard;\nexport default Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["React","Link","Board","renderSquare","x","y","knightX","knightY","black","isKnightHere","piece","Chessboard","width","height","knightPosition"],"sources":["C:/Users/jackh/Documents/Interactive-Algorithm-Visualizer/react_project/algoactive/src/components/Chessboard.jsx"],"sourcesContent":["/* ------------------------------------------------------------------ */\r\n/* Chessboard.jsx                                                     */\r\n/* Author: John Hart                                                  */\r\n/* ------------------------------------------------------------------ */\r\n\r\nimport React from \"react\";\r\n// importing Link from react-router-dom to navigate to \r\n// different end points.\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Board from \"./Board\";\r\n\r\nconst renderSquare = new function(x, y, [knightX, knightY])\r\n    {\r\n      const black = (x + y) % 2 === 1\r\n      const isKnightHere = knightX === x && knightY === y\r\n      const piece = isKnightHere ? <ChessboardKnight /> : null\r\n\r\n      return <ChessboardSquare black={black}>{piece}</ChessboardSquare>\r\n    };\r\n\r\nconst Chessboard = () => {\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          height: '100%'\r\n        }}\r\n      >\r\n        {renderSquare(0, 0, knightPosition)}\r\n        {renderSquare(1, 0, knightPosition)}\r\n        {renderSquare(2, 0, knightPosition)}\r\n      </div>\r\n    );\r\n  };\r\n    \r\n  export default Chessboard;"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,OAAOC,KAAK,MAAM,SAAS;AAAC;AAE5B,MAAMC,YAAY,GAAG,IAAI,UAASC,CAAC,EAAEC,CAAC,QAClC;EAAA,IADoC,CAACC,OAAO,EAAEC,OAAO,CAAC;EAEpD,MAAMC,KAAK,GAAG,CAACJ,CAAC,GAAGC,CAAC,IAAI,CAAC,KAAK,CAAC;EAC/B,MAAMI,YAAY,GAAGH,OAAO,KAAKF,CAAC,IAAIG,OAAO,KAAKF,CAAC;EACnD,MAAMK,KAAK,GAAGD,YAAY,gBAAG,QAAC,gBAAgB;IAAA;IAAA;IAAA;EAAA,QAAG,GAAG,IAAI;EAExD,oBAAO,QAAC,gBAAgB;IAAC,KAAK,EAAED,KAAM;IAAA,UAAEE;EAAK;IAAA;IAAA;IAAA;EAAA,QAAoB;AACnE,CAAC;AAEL,MAAMC,UAAU,GAAG,MAAM;EAErB,oBACE;IACE,KAAK,EAAE;MACLC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE;IACV,CAAE;IAAA,WAEDV,YAAY,CAAC,CAAC,EAAE,CAAC,EAAEW,cAAc,CAAC,EAClCX,YAAY,CAAC,CAAC,EAAE,CAAC,EAAEW,cAAc,CAAC,EAClCX,YAAY,CAAC,CAAC,EAAE,CAAC,EAAEW,cAAc,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/B;AAEV,CAAC;AAAC,KAdEH,UAAU;AAgBd,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}